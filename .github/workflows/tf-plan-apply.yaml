name: Terraform (plan/apply)

on:
  push: { branches: [ "main" ] }
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: tf-account-infra
  cancel-in-progress: false

jobs:
  oidc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::048153623156:role/github-ml-artifacts-deploy
          aws-region: us-east-1

      - name: Who am I (debug)
        run: aws sts get-caller-identity

      - name: Can I see the remote backend object?
        env:
          BUCKET: tfstate-ml-sandbox
          KEY: services/object-classifier/oidc/terraform.tfstate
        run: |
          set -e
          aws s3api head-object --bucket "$BUCKET" --key "$KEY" || true
          aws s3api list-objects-v2 --bucket "$BUCKET" --prefix "$(dirname $KEY)/" || true

      - name: Init & Plan (OIDC)
        run: |
          terraform -chdir=infra/stack/oidc_github init -input=false -reconfigure
          terraform -chdir=infra/stack/oidc_github plan -out=tf.plan -input=false -lock-timeout=5m

      - name: Apply (OIDC)
        run: terraform -chdir=infra/stack/oidc_github apply -lock-timeout=5m --auto-approve tf.plan

  artifacts:
    needs: oidc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3

      - name: Configure AWS (OIDC) - fresh session
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::048153623156:role/github-ml-artifacts-deploy
          aws-region: us-east-1

      - name: Init (artifacts)
        run: terraform -chdir=infra/stack/artifacts init -input=false -reconfigure

      - name: Import S3 bucket into state (artifacts)
        env: { BUCKET: ml-artifacts-048153623156 }
        run: |
          set -e
          if ! terraform -chdir=infra/stack/artifacts state list | grep -q '^aws_s3_bucket\.artifacts$'; then
            if aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
              terraform -chdir=infra/stack/artifacts import aws_s3_bucket.artifacts "$BUCKET"
            fi
          fi

      - name: Plan (artifacts)
        run: terraform -chdir=infra/stack/artifacts plan -out=tf.plan -input=false -lock-timeout=5m

      - name: Apply (artifacts)
        run: terraform -chdir=infra/stack/artifacts apply --auto-approve tf.plan -lock-timeout=5m
